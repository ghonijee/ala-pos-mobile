name: Build apk and distribute app
on: 
  pull_request:
    types: [closed]
    branches:
      -  production
  # push:
  #   branches:
  #     - development

jobs:
  build:
    name: Build App and Upload to Internal Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      
      - name: Install pub Dependencies
        run: flutter pub get
      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build APK QAS API Server
        run: flutter build appbundle --release --dart-define ENV=.env.production
      - name: Decode Google Play Key API
        id: google_key_api
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: play_config.json
          encodedString: ${{ secrets.PLAY_CONFIG_JSON }}
      - name: Create service_account_key.json
        run: |
          cp ${{ steps.google_key_api.outputs.filePath }} android/service_account_key.json
      # - name: Create service_account_key.json
      #   run: |
      #     echo "${{ steps.google_key_api.outputs.filePath }}" > android/service_account_key.json
      - name: upload to playstore (Internal Testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ steps.google_key_api.outputs.filePath }}
          packageName: com.ala.alapos
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: inProgress
  # https://github.com/marketplace/actions/semver-release
  release:
    name: Create Tag by PR Semver
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - name: Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}